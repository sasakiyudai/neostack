import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { CircularProgress } from "@mui/material";
import styles from "../styles/Home.module.css";
import { Navigate } from "react-router-dom";
import { useDispatch, useSelector } from "react-redux";
import { RootState } from "../store";
import { decrement, increment } from "../store/counter/action";

const Home: NextPage = () => {
  // const [state, setState] = useState({
  //   isLoaded: false,
  //   isLoggedIn: false,
  //   menu_shown: true,
  //   hide_menu_animation: 0,
  //   show_menu_animation: 0,
  //   marginLeft: "235px",
  // });

  // useEffect(() => {
  //   componentStart();
  // }, []);

  // const componentStart = async () => {
  //   let userResponse;

  //   // Check if user is logged in (by seeing if there is a token in local storage)
  //   if (localStorage.getItem("token")) {
  //     try {
  //       userResponse = await props.get_user_data();
  //     } catch {
  //       // If token is wrong then return back to login and clear token from localstorage
  //       localStorage.setItem("token", "");
  //       setState({ ...state, isLoaded: true });
  //       return;
  //     }
  //     // Fetch the pages
  //     await props.fetch_pages(userResponse.id);

  //     // Update state
  //     setState({ ...state, isLoaded: true, isLoggedIn: true });
  //   } else {
  //     // Update state
  //     setState({ ...state, isLoaded: true });
  //   }
  // };

  // const logout = () => {
  //   // Change state to false so that we redirect to log in page.
  //   setState({ ...state, isLoggedIn: false });

  //   // Call logout redux action
  //   props.logout();
  // };

  // const toggle_menu = (status) => {
  //   setState({ ...state, menu_shown: status });
  // };

  // const close_menu_animation = () => {
  //   setState((prevState) => ({ ...prevState, hide_menu_animation: 1 }));
  // };

  // const open_menu_animation = () => {
  //   setState((prevState) => ({ ...prevState, show_menu_animation: 1 }));
  // };

  // if (!state.isLoaded) return <CircularProgress />;

  // if (!state.isLoggedIn) return <Navigate to="/login" />;

  const countState = useSelector((state: RootState) => state.count);
  const dispatch = useDispatch();

  const OnIncrement = () => {
    dispatch(increment());
  };

  const OnDecrement = () => {
    dispatch(decrement());
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {countState.value}
      <button onClick={OnIncrement}>+1</button>
      <button onClick={OnDecrement}>-1</button>
    </div>
  );
};

export default Home;
